info:
  contact: {}
paths:
  /history/review/:orderNumber:
    post:
      consumes:
      - application/json
      description: 주문 번호를 확인 후 배송완료가 된 주문이면 리뷰와 평점을 작성할 수 있다.
      produces:
      - application/json
      responses: {}
      summary: call WriteReview, return ok by json.
  /menu:
    get:
      description: 등록된 메뉴를 JSON 형태로 가져옵니다.
      responses: {}
      summary: 등록된 메뉴 리스트를 가져옵니다.
    post:
      consumes:
      - application/json
      description: JSON형태로 데이터를 전달받아 메뉴를 생성합니다.
      responses:
        "200":
          description: ok
          schema:
            type: string
        "400":
          description: fail, enter a menu name, please
          schema:
            type: string
        "422":
          description: already resistery menu
          schema:
            type: string
      summary: 메뉴를 등록합니다.
  /menu/:menu:
    put:
      consumes:
      - application/json
      description: 메뉴의 이름을 파라미터로 받고 JSON으로 수정하려는 내용을 받아 기존 메뉴의 정보를 변경할 수 있다.
      parameters:
      - description: 메뉴를 삭제하기 위함
        in: path
        name: name
        required: true
        type: string
      responses:
        "200":
          description: ok
          schema:
            type: string
        "400":
          description: fail, Please enter your json correctly
          schema:
            type: string
        "422":
          description: The menu cannot be edited.
          schema:
            type: string
      summary: 메뉴의 정보를 수정합니다.
  /menu/:name:
    delete:
      consumes:
      - application/json
      description: arameter 형태로 메뉴 이름을 받아 해당 메뉴를 삭제합니다.
      parameters:
      - description: 메뉴를 삭제하기 위함
        in: path
        name: name
        required: true
        type: string
      responses:
        "200":
          description: ok
          schema:
            type: string
        "400":
          description: It is not a registered menu
          schema:
            type: string
        "422":
          description: fail delete db
          schema:
            type: string
      summary: 메뉴를 삭제합니다.
    get:
      consumes:
      - application/json
      description: 메뉴의 이름을 파라미터로 받고 JSON 형태로 해당 메뉴에 대한 정보를 얻을 수 있다.
      responses:
        "200":
          description: ok
          schema:
            type: string
        "422":
          description: It is not a registered menu
          schema:
            type: string
      summary: 한가지 메뉴에 대한 정보를 얻을 수 있다.
  /menu/order:
    get:
      consumes:
      - application/json
      description: 주문 상태가 "접수완료"인 메뉴들을 확인할 수 있다.
      responses:
        "200":
          description: ok
          schema:
            type: string
        "422":
          description: parameter not found
          schema:
            type: string
      summary: 접수 완료된 주문들의 리스트를 확인할 수 있다.
    put:
      consumes:
      - application/json
      description: 주문 상태가 "접수완료"인 메뉴들의 상태를 변경할 수 있다.
      responses:
        "200":
          description: ok
          schema:
            type: string
        "400":
          description: You entered an incorrect status code.
          schema:
            type: string
        "422":
          description: fail update status
          schema:
            type: string
      summary: 주문들의 상태를 변경할 수 있다.
  /order:
    get:
      description: 판매자가 추천설정을 한 메뉴들의 리스트를 가져올 수 있다.
      parameters:
      - description: condition
        in: query
        name: grade
        type: string
      - description: condition
        in: query
        name: createdat
        type: string
      - description: orderby
        in: query
        name: "1"
        type: integer
      responses:
        "200":
          description: ok
          schema:
            type: string
        "400":
          description: err message
          schema:
            type: string
        "422":
          description: fail, Not Found Param
          schema:
            type: string
      summary: 메뉴 리스트 조회 및 정렬(추천/평점/주문수/최신)
    post:
      description: json 형태로 주문을 요청합니다. 요청이 완료되면 주문 번호를 json 형태로 리턴합니다.
      responses:
        "200":
          description: ok
          schema:
            type: string
        "400":
          description: fail, Not Found Param
          schema:
            type: string
        "422":
          description: fail create customer
          schema:
            type: string
      summary: 주문자가 주문을 요청할 수 있습니다.
  /order/:orderid:
    post:
      description: Parameter로 주문번호를 입력받고, JSON 형태로 추가하고자 하는 메뉴의 정보를 전달하면 메뉴를 추가할 수
        있습니다. 배달 중일 경우 신규 주문으로 요청됩니다.
      parameters:
      - description: 메뉴를 추가하기 위함
        in: path
        name: orderid
        required: true
        type: string
      responses:
        "200":
          description: ok
          schema:
            type: string
        "400":
          description: fail, Not Found JSON
          schema:
            type: string
        "422":
          description: failm increase menu volume
          schema:
            type: string
      summary: 메뉴를 추가할 수 있습니다.
  /order/:ordernumber:
    put:
      description: paramert로 주문ID와 JSON으로 변경하려는 내용을 입력하여 메뉴를 변경할 수 있다. 변경 시 상태가 조리중,
        배달중 일경우 실패 알림을 보낸다.
      parameters:
      - description: 메뉴를 변경하기 위함
        in: path
        name: orderid
        required: true
        type: string
      responses:
        "200":
          description: ok
          schema:
            type: string
        "400":
          description: err message
          schema:
            type: string
        "422":
          description: fail, Not Found Order
          schema:
            type: string
      summary: 메뉴를 변경할 수 있다.
swagger: "2.0"
